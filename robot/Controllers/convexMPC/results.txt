Flat profile:

Each sample counts as 0.01 seconds.
 no time accumulated

  %   cumulative   self              self     total           
 time   seconds   seconds    calls  Ts/call  Ts/call  name    
  0.00      0.00     0.00      288     0.00     0.00  Eigen::internal::gebp_kernel<float, float, long, Eigen::internal::blas_data_mapper<float, long, 0, 0>, 8, 4, false, false>::operator()(Eigen::internal::blas_data_mapper<float, long, 0, 0> const&, float const*, float const*, long, long, long, float, long, long, long, long)
  0.00      0.00     0.00      284     0.00     0.00  Eigen::internal::gemm_pack_lhs<float, long, Eigen::internal::const_blas_data_mapper<float, long, 0>, 8, 4, 0, false, false>::operator()(float*, Eigen::internal::const_blas_data_mapper<float, long, 0> const&, long, long, long, long) [clone .constprop.2999]
  0.00      0.00     0.00      279     0.00     0.00  Eigen::internal::gemm_pack_rhs<float, long, Eigen::internal::const_blas_data_mapper<float, long, 0>, 4, 0, false, false>::operator()(float*, Eigen::internal::const_blas_data_mapper<float, long, 0> const&, long, long, long, long) [clone .constprop.3000]
  0.00      0.00     0.00      276     0.00     0.00  print_update_data(update_data_t*, short)
  0.00      0.00     0.00      263     0.00     0.00  Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 13, 13, 0, 13, 13> >, Eigen::internal::evaluator<Eigen::Matrix<float, 13, 13, 0, 13, 13> >, Eigen::internal::assign_op<float, float>, 0>, 3, 2>::run(Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 13, 13, 0, 13, 13> >, Eigen::internal::evaluator<Eigen::Matrix<float, 13, 13, 0, 13, 13> >, Eigen::internal::assign_op<float, float>, 0>&)
  0.00      0.00     0.00       64     0.00     0.00  Eigen::CommaInitializer<Eigen::Matrix<float, 3, 3, 0, 3, 3> >::operator,(float const&)
  0.00      0.00     0.00       25     0.00     0.00  Eigen::internal::general_matrix_matrix_product<long, float, 0, false, float, 0, false, 0>::run(long, long, long, float const*, long, float const*, long, float*, long, float, Eigen::internal::level3_blocking<float, float>&, Eigen::internal::GemmParallelInfo<long>*)
  0.00      0.00     0.00       24     0.00     0.00  void Eigen::internal::outer_product_selector_run<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false>, 1, -1, false>, Eigen::internal::generic_product_impl<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false>, 1, -1, false>, Eigen::DenseShape, Eigen::DenseShape, 5>::sub>(Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>&, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> const&, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false>, 1, -1, false> const&, Eigen::internal::generic_product_impl<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false>, 1, -1, false>, Eigen::DenseShape, Eigen::DenseShape, 5>::sub const&, Eigen::internal::false_type const&)
  0.00      0.00     0.00       24     0.00     0.00  frame_dummy
  0.00      0.00     0.00       19     0.00     0.00  Eigen::internal::aligned_malloc(unsigned long)
  0.00      0.00     0.00       14     0.00     0.00  Eigen::CommaInitializer<Eigen::Matrix<float, 5, 3, 0, 5, 3> >::operator,(float const&)
  0.00      0.00     0.00       13     0.00     0.00  Eigen::internal::manage_caching_sizes(Eigen::Action, long*, long*, long*)
  0.00      0.00     0.00       11     0.00     0.00  void Eigen::MatrixPower<Eigen::Matrix<float, 13, 13, 0, 13, 13> >::computeIntPower<Eigen::Block<Eigen::Matrix<float, -1, 13, 0, -1, 13>, -1, -1, false> >(Eigen::Block<Eigen::Matrix<float, -1, 13, 0, -1, 13>, -1, -1, false>&, float)
  0.00      0.00     0.00       11     0.00     0.00  void Eigen::MatrixPower<Eigen::Matrix<float, 13, 13, 0, 13, 13> >::compute<Eigen::Block<Eigen::Matrix<float, -1, 13, 0, -1, 13>, -1, -1, false> >(Eigen::Block<Eigen::Matrix<float, -1, 13, 0, -1, 13>, -1, -1, false>&, float)
  0.00      0.00     0.00       11     0.00     0.00  Eigen::internal::gemm_pack_rhs<float, long, Eigen::internal::blas_data_mapper<float, long, 0, 0>, 4, 0, false, true>::operator()(float*, Eigen::internal::blas_data_mapper<float, long, 0, 0> const&, long, long, long, long)
  0.00      0.00     0.00       10     0.00     0.00  Eigen::PlainObjectBase<Eigen::Matrix<float, -1, -1, 0, -1, -1> >::resize(long, long)
  0.00      0.00     0.00        7     0.00     0.00  print_problem_setup(problem_setup*)
  0.00      0.00     0.00        7     0.00     0.00  Eigen::PlainObjectBase<Eigen::Matrix<float, -1, 1, 0, -1, 1> >::resize(long, long) [clone .constprop.2933]
  0.00      0.00     0.00        5     0.00     0.00  void Eigen::internal::evaluateProductBlockingSizesHeuristic<float, float, 1, long>(long&, long&, long&, long)
  0.00      0.00     0.00        4     0.00     0.00  matrix_to_real(double*, Eigen::Matrix<float, -1, -1, 0, -1, -1>, short, short)
  0.00      0.00     0.00        4     0.00     0.00  Eigen::Matrix<float, -1, 13, 0, -1, 13>::~Matrix()
  0.00      0.00     0.00        4     0.00     0.00  Eigen::internal::partial_lu_impl<float, 0, int>::unblocked_lu(Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>&, int*, int&)
  0.00      0.00     0.00        4     0.00     0.00  Eigen::internal::triangular_solve_matrix<float, long, 1, 5, false, 0, 0>::run(long, long, float const*, long, float*, long, Eigen::internal::level3_blocking<float, float>&)
  0.00      0.00     0.00        3     0.00     0.00  Eigen::CommaInitializer<Eigen::Matrix<float, 13, 1, 0, 13, 1> >::operator,(float const&)
  0.00      0.00     0.00        3     0.00     0.00  Eigen::CommaInitializer<Eigen::Matrix<float, 13, 1, 0, 13, 1> >& Eigen::CommaInitializer<Eigen::Matrix<float, 13, 1, 0, 13, 1> >::operator,<Eigen::Matrix<float, 3, 1, 0, 3, 1> >(Eigen::DenseBase<Eigen::Matrix<float, 3, 1, 0, 3, 1> > const&)
  0.00      0.00     0.00        3     0.00     0.00  void Eigen::internal::evaluateProductBlockingSizesHeuristic<float, float, 4, long>(long&, long&, long&, long)
  0.00      0.00     0.00        2     0.00     0.00  Eigen::DenseStorage<float, -1, -1, -1, 0>::DenseStorage(Eigen::DenseStorage<float, -1, -1, -1, 0> const&)
  0.00      0.00     0.00        2     0.00     0.00  Eigen::PlainObjectBase<Eigen::Matrix<float, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Matrix<float, -1, 1, 0, -1, 1> >(Eigen::DenseBase<Eigen::Matrix<float, -1, 1, 0, -1, 1> > const&)
  0.00      0.00     0.00        2     0.00     0.00  Eigen::Block<Eigen::Matrix<float, 13, 13, 0, 13, 13>, -1, -1, false>::Block(Eigen::Matrix<float, 13, 13, 0, 13, 13>&, long, long, long, long)
  0.00      0.00     0.00        2     0.00     0.00  Eigen::internal::redux_impl<Eigen::internal::scalar_max_op<float, float>, Eigen::internal::redux_evaluator<Eigen::PartialReduxExpr<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<float>, Eigen::Matrix<float, 25, 25, 0, 25, 25> const> const, Eigen::internal::member_sum<float>, 0> >, 0, 0>::run(Eigen::internal::redux_evaluator<Eigen::PartialReduxExpr<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<float>, Eigen::Matrix<float, 25, 25, 0, 25, 25> const> const, Eigen::internal::member_sum<float>, 0> > const&, Eigen::internal::scalar_max_op<float, float> const&)
  0.00      0.00     0.00        2     0.00     0.00  Eigen::internal::general_matrix_matrix_product<long, float, 1, false, float, 0, false, 0>::run(long, long, long, float const*, long, float const*, long, float*, long, float, Eigen::internal::level3_blocking<float, float>&, Eigen::internal::GemmParallelInfo<long>*)
  0.00      0.00     0.00        2     0.00     0.00  Eigen::internal::general_matrix_vector_product<long, float, Eigen::internal::const_blas_data_mapper<float, long, 0>, 0, false, float, Eigen::internal::const_blas_data_mapper<float, long, 1>, false, 0>::run(long, long, Eigen::internal::const_blas_data_mapper<float, long, 0> const&, Eigen::internal::const_blas_data_mapper<float, long, 1> const&, float*, long, float)
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z18print_matlab_arrayPdtt
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN10RobotState3setEPfS0_S0_S0_S0_f
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I_problem_configuration
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I_rs
  0.00      0.00     0.00        1     0.00     0.00  ct_ss_mats(Eigen::Matrix<float, 3, 3, 0, 3, 3>, float, Eigen::Matrix<float, 3, 4, 0, 3, 4>, Eigen::Matrix<float, 3, 3, 0, 3, 3>, Eigen::Matrix<float, 13, 13, 0, 13, 13>&, Eigen::Matrix<float, 13, 12, 0, 13, 12>&)
  0.00      0.00     0.00        1     0.00     0.00  quat_to_rpy(Eigen::Quaternion<float, 0>, Eigen::Matrix<float, 3, 1, 0, 3, 1>&)
  0.00      0.00     0.00        1     0.00     0.00  c2qp(Eigen::Matrix<float, 13, 13, 0, 13, 13>, Eigen::Matrix<float, 13, 12, 0, 13, 12>, float, short)
  0.00      0.00     0.00        1     0.00     0.00  RobotState::set(float*, float*, float*, float*, float*, float)
  0.00      0.00     0.00        1     0.00     0.00  Eigen::PartialPivLU<Eigen::Matrix<float, 25, 25, 0, 25, 25> >::compute()
  0.00      0.00     0.00        1     0.00     0.00  std::ostream& Eigen::internal::print_matrix<Eigen::Matrix<float, 13, 12, 0, 13, 12> >(std::ostream&, Eigen::Matrix<float, 13, 12, 0, 13, 12> const&, Eigen::IOFormat const&)
  0.00      0.00     0.00        1     0.00     0.00  std::ostream& Eigen::internal::print_matrix<Eigen::Matrix<float, 13, 13, 0, 13, 13> >(std::ostream&, Eigen::Matrix<float, 13, 13, 0, 13, 13> const&, Eigen::IOFormat const&)
  0.00      0.00     0.00        1     0.00     0.00  std::ostream& Eigen::internal::print_matrix<Eigen::Matrix<float, 3, 1, 0, 3, 1> >(std::ostream&, Eigen::Matrix<float, 3, 1, 0, 3, 1> const&, Eigen::IOFormat const&)
  0.00      0.00     0.00        1     0.00     0.00  Eigen::internal::partial_lu_impl<float, 0, int>::blocked_lu(long, long, float*, long, int*, int&, long)
  0.00      0.00     0.00        1     0.00     0.00  Eigen::internal::queryCacheSizes(int&, int&, int&)
  0.00      0.00     0.00        1     0.00     0.00  void Eigen::internal::matrix_exp_pade3<Eigen::Matrix<float, 25, 25, 0, 25, 25> >(Eigen::Matrix<float, 25, 25, 0, 25, 25> const&, Eigen::Matrix<float, 25, 25, 0, 25, 25>&, Eigen::Matrix<float, 25, 25, 0, 25, 25>&)
  0.00      0.00     0.00        1     0.00     0.00  void Eigen::internal::matrix_exp_compute<Eigen::Matrix<float, 25, 25, 0, 25, 25>, Eigen::Matrix<float, 25, 25, 0, 25, 25> >(Eigen::Matrix<float, 25, 25, 0, 25, 25> const&, Eigen::Matrix<float, 25, 25, 0, 25, 25>&)
  0.00      0.00     0.00        1     0.00     0.00  Eigen::internal::triangular_solve_matrix<float, long, 1, 2, false, 0, 0>::run(long, long, float const*, long, float*, long, Eigen::internal::level3_blocking<float, float>&)
  0.00      0.00     0.00        1     0.00     0.00  void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<float, 3, 3, 0, 3, 3>, Eigen::Product<Eigen::Matrix<float, 3, 3, 0, 3, 3>, Eigen::Matrix<float, 3, 3, 0, 3, 3>, 1>, Eigen::internal::assign_op<float, float> >(Eigen::Matrix<float, 3, 3, 0, 3, 3>&, Eigen::Product<Eigen::Matrix<float, 3, 3, 0, 3, 3>, Eigen::Matrix<float, 3, 3, 0, 3, 3>, 1> const&, Eigen::internal::assign_op<float, float> const&)
  0.00      0.00     0.00        1     0.00     0.00  void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, -1, 0, -1, -1> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, Eigen::Product<Eigen::Product<Eigen::Transpose<Eigen::Matrix<float, -1, -1, 0, -1, -1> >, Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0>, Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, -1, 0, -1, -1> const> const, Eigen::Matrix<float, -1, -1, 0, -1, -1> const> const> const>, Eigen::internal::assign_op<float, float> >(Eigen::Matrix<float, -1, -1, 0, -1, -1>&, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, -1, 0, -1, -1> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, Eigen::Product<Eigen::Product<Eigen::Transpose<Eigen::Matrix<float, -1, -1, 0, -1, -1> >, Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0>, Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, -1, 0, -1, -1> const> const, Eigen::Matrix<float, -1, -1, 0, -1, -1> const> const> const> const&, Eigen::internal::assign_op<float, float> const&)
  0.00      0.00     0.00        1     0.00     0.00  void Eigen::internal::permutation_matrix_product<Eigen::Matrix<float, 25, 25, 0, 25, 25>, 1, false, Eigen::DenseShape>::run<Eigen::Matrix<float, 25, 25, 0, 25, 25>, Eigen::PermutationMatrix<25, 25, int> >(Eigen::Matrix<float, 25, 25, 0, 25, 25>&, Eigen::PermutationMatrix<25, 25, int> const&, Eigen::Matrix<float, 25, 25, 0, 25, 25> const&)
  0.00      0.00     0.00        1     0.00     0.00  Eigen::internal::gemm_functor<float, long, Eigen::internal::general_matrix_matrix_product<long, float, 1, false, float, 0, false, 0>, Eigen::Transpose<Eigen::Matrix<float, -1, -1, 0, -1, -1> const>, Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, float, float, -1, -1, -1, 1, false> >::operator()(long, long, long, long, Eigen::internal::GemmParallelInfo<long>*) const
  0.00      0.00     0.00        1     0.00     0.00  float Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false> const, 1, -1, false> const> const, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false> const, -1, 1, true> const> >::redux<Eigen::internal::scalar_sum_op<float, float> >(Eigen::internal::scalar_sum_op<float, float> const&) const
  0.00      0.00     0.00        1     0.00     0.00  float Eigen::DenseBase<Eigen::Diagonal<Eigen::Matrix<float, -1, -1, 0, -1, -1> const, 0> >::redux<Eigen::internal::scalar_sum_op<float, float> >(Eigen::internal::scalar_sum_op<float, float> const&) const

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.
 
 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this 
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) no time propagated

index % time    self  children    called     name
                0.00    0.00       2/24          ct_ss_mats(Eigen::Matrix<float, 3, 3, 0, 3, 3>, float, Eigen::Matrix<float, 3, 4, 0, 3, 4>, Eigen::Matrix<float, 3, 3, 0, 3, 3>, Eigen::Matrix<float, 13, 13, 0, 13, 13>&, Eigen::Matrix<float, 13, 12, 0, 13, 12>&) [51]
                0.00    0.00      22/24          Eigen::internal::general_matrix_matrix_product<long, float, 0, false, float, 0, false, 0>::run(long, long, long, float const*, long, float const*, long, float*, long, float, Eigen::internal::level3_blocking<float, float>&, Eigen::internal::GemmParallelInfo<long>*) [22]
[1]      0.0    0.00    0.00      24         frame_dummy [1]
-----------------------------------------------
                0.00    0.00       3/288         Eigen::internal::triangular_solve_matrix<float, long, 1, 5, false, 0, 0>::run(long, long, float const*, long, float*, long, Eigen::internal::level3_blocking<float, float>&) [37]
                0.00    0.00       3/288         Eigen::internal::triangular_solve_matrix<float, long, 1, 2, false, 0, 0>::run(long, long, float const*, long, float*, long, Eigen::internal::level3_blocking<float, float>&) [63]
                0.00    0.00       4/288         Eigen::internal::general_matrix_matrix_product<long, float, 0, false, float, 0, false, 0>::run(long, long, long, float const*, long, float const*, long, float*, long, float, Eigen::internal::level3_blocking<float, float>&, Eigen::internal::GemmParallelInfo<long>*) [22]
                0.00    0.00       4/288         Eigen::internal::general_matrix_matrix_product<long, float, 1, false, float, 0, false, 0>::run(long, long, long, float const*, long, float const*, long, float*, long, float, Eigen::internal::level3_blocking<float, float>&, Eigen::internal::GemmParallelInfo<long>*) [45]
                0.00    0.00     274/288         print_update_data(update_data_t*, short) [19]
[16]     0.0    0.00    0.00     288         Eigen::internal::gebp_kernel<float, float, long, Eigen::internal::blas_data_mapper<float, long, 0, 0>, 8, 4, false, false>::operator()(Eigen::internal::blas_data_mapper<float, long, 0, 0> const&, float const*, float const*, long, long, long, float, long, long, long, long) [16]
-----------------------------------------------
                0.00    0.00       3/284         Eigen::internal::triangular_solve_matrix<float, long, 1, 5, false, 0, 0>::run(long, long, float const*, long, float*, long, Eigen::internal::level3_blocking<float, float>&) [37]
                0.00    0.00       3/284         Eigen::internal::triangular_solve_matrix<float, long, 1, 2, false, 0, 0>::run(long, long, float const*, long, float*, long, Eigen::internal::level3_blocking<float, float>&) [63]
                0.00    0.00       4/284         Eigen::internal::general_matrix_matrix_product<long, float, 0, false, float, 0, false, 0>::run(long, long, long, float const*, long, float const*, long, float*, long, float, Eigen::internal::level3_blocking<float, float>&, Eigen::internal::GemmParallelInfo<long>*) [22]
                0.00    0.00     274/284         print_update_data(update_data_t*, short) [19]
[17]     0.0    0.00    0.00     284         Eigen::internal::gemm_pack_lhs<float, long, Eigen::internal::const_blas_data_mapper<float, long, 0>, 8, 4, 0, false, false>::operator()(float*, Eigen::internal::const_blas_data_mapper<float, long, 0> const&, long, long, long, long) [clone .constprop.2999] [17]
-----------------------------------------------
                0.00    0.00       2/279         Eigen::internal::general_matrix_matrix_product<long, float, 1, false, float, 0, false, 0>::run(long, long, long, float const*, long, float const*, long, float*, long, float, Eigen::internal::level3_blocking<float, float>&, Eigen::internal::GemmParallelInfo<long>*) [45]
                0.00    0.00       3/279         Eigen::internal::general_matrix_matrix_product<long, float, 0, false, float, 0, false, 0>::run(long, long, long, float const*, long, float const*, long, float*, long, float, Eigen::internal::level3_blocking<float, float>&, Eigen::internal::GemmParallelInfo<long>*) [22]
                0.00    0.00     274/279         print_update_data(update_data_t*, short) [19]
[18]     0.0    0.00    0.00     279         Eigen::internal::gemm_pack_rhs<float, long, Eigen::internal::const_blas_data_mapper<float, long, 0>, 4, 0, false, false>::operator()(float*, Eigen::internal::const_blas_data_mapper<float, long, 0> const&, long, long, long, long) [clone .constprop.3000] [18]
-----------------------------------------------
                                   2             print_update_data(update_data_t*, short) [19]
                0.00    0.00       4/276         void Eigen::internal::matrix_exp_pade3<Eigen::Matrix<float, 25, 25, 0, 25, 25> >(Eigen::Matrix<float, 25, 25, 0, 25, 25> const&, Eigen::Matrix<float, 25, 25, 0, 25, 25>&, Eigen::Matrix<float, 25, 25, 0, 25, 25>&) [61]
                0.00    0.00      20/276         void Eigen::MatrixPower<Eigen::Matrix<float, 13, 13, 0, 13, 13> >::computeIntPower<Eigen::Block<Eigen::Matrix<float, -1, 13, 0, -1, 13>, -1, -1, false> >(Eigen::Block<Eigen::Matrix<float, -1, 13, 0, -1, 13>, -1, -1, false>&, float) [27]
                0.00    0.00      22/276         Eigen::internal::general_matrix_matrix_product<long, float, 0, false, float, 0, false, 0>::run(long, long, long, float const*, long, float const*, long, float*, long, float, Eigen::internal::level3_blocking<float, float>&, Eigen::internal::GemmParallelInfo<long>*) [22]
                0.00    0.00     230/276         c2qp(Eigen::Matrix<float, 13, 13, 0, 13, 13>, Eigen::Matrix<float, 13, 12, 0, 13, 12>, float, short) [53]
[19]     0.0    0.00    0.00     276+2       print_update_data(update_data_t*, short) [19]
                0.00    0.00     274/284         Eigen::internal::gemm_pack_lhs<float, long, Eigen::internal::const_blas_data_mapper<float, long, 0>, 8, 4, 0, false, false>::operator()(float*, Eigen::internal::const_blas_data_mapper<float, long, 0> const&, long, long, long, long) [clone .constprop.2999] [17]
                0.00    0.00     274/279         Eigen::internal::gemm_pack_rhs<float, long, Eigen::internal::const_blas_data_mapper<float, long, 0>, 4, 0, false, false>::operator()(float*, Eigen::internal::const_blas_data_mapper<float, long, 0> const&, long, long, long, long) [clone .constprop.3000] [18]
                0.00    0.00     274/288         Eigen::internal::gebp_kernel<float, float, long, Eigen::internal::blas_data_mapper<float, long, 0, 0>, 8, 4, false, false>::operator()(Eigen::internal::blas_data_mapper<float, long, 0, 0> const&, float const*, float const*, long, long, long, float, long, long, long, long) [16]
                                   2             print_update_data(update_data_t*, short) [19]
-----------------------------------------------
                0.00    0.00      11/263         void Eigen::MatrixPower<Eigen::Matrix<float, 13, 13, 0, 13, 13> >::computeIntPower<Eigen::Block<Eigen::Matrix<float, -1, 13, 0, -1, 13>, -1, -1, false> >(Eigen::Block<Eigen::Matrix<float, -1, 13, 0, -1, 13>, -1, -1, false>&, float) [27]
                0.00    0.00      22/263         Eigen::internal::general_matrix_matrix_product<long, float, 0, false, float, 0, false, 0>::run(long, long, long, float const*, long, float const*, long, float*, long, float, Eigen::internal::level3_blocking<float, float>&, Eigen::internal::GemmParallelInfo<long>*) [22]
                0.00    0.00     230/263         c2qp(Eigen::Matrix<float, 13, 13, 0, 13, 13>, Eigen::Matrix<float, 13, 12, 0, 13, 12>, float, short) [53]
[20]     0.0    0.00    0.00     263         Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 13, 13, 0, 13, 13> >, Eigen::internal::evaluator<Eigen::Matrix<float, 13, 13, 0, 13, 13> >, Eigen::internal::assign_op<float, float>, 0>, 3, 2>::run(Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 13, 13, 0, 13, 13> >, Eigen::internal::evaluator<Eigen::Matrix<float, 13, 13, 0, 13, 13> >, Eigen::internal::assign_op<float, float>, 0>&) [20]
-----------------------------------------------
                0.00    0.00      64/64          ct_ss_mats(Eigen::Matrix<float, 3, 3, 0, 3, 3>, float, Eigen::Matrix<float, 3, 4, 0, 3, 4>, Eigen::Matrix<float, 3, 3, 0, 3, 3>, Eigen::Matrix<float, 13, 13, 0, 13, 13>&, Eigen::Matrix<float, 13, 12, 0, 13, 12>&) [51]
[21]     0.0    0.00    0.00      64         Eigen::CommaInitializer<Eigen::Matrix<float, 3, 3, 0, 3, 3> >::operator,(float const&) [21]
-----------------------------------------------
                0.00    0.00       1/25          void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, -1, 0, -1, -1> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, Eigen::Product<Eigen::Product<Eigen::Transpose<Eigen::Matrix<float, -1, -1, 0, -1, -1> >, Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0>, Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, -1, 0, -1, -1> const> const, Eigen::Matrix<float, -1, -1, 0, -1, -1> const> const> const>, Eigen::internal::assign_op<float, float> >(Eigen::Matrix<float, -1, -1, 0, -1, -1>&, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, -1, 0, -1, -1> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, Eigen::Product<Eigen::Product<Eigen::Transpose<Eigen::Matrix<float, -1, -1, 0, -1, -1> >, Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0>, Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, -1, 0, -1, -1> const> const, Eigen::Matrix<float, -1, -1, 0, -1, -1> const> const> const> const&, Eigen::internal::assign_op<float, float> const&) [65]
                0.00    0.00       2/25          Eigen::internal::partial_lu_impl<float, 0, int>::blocked_lu(long, long, float*, long, int*, int&, long) [59]
                0.00    0.00      22/25          void Eigen::MatrixPower<Eigen::Matrix<float, 13, 13, 0, 13, 13> >::computeIntPower<Eigen::Block<Eigen::Matrix<float, -1, 13, 0, -1, 13>, -1, -1, false> >(Eigen::Block<Eigen::Matrix<float, -1, 13, 0, -1, 13>, -1, -1, false>&, float) [27]
[22]     0.0    0.00    0.00      25         Eigen::internal::general_matrix_matrix_product<long, float, 0, false, float, 0, false, 0>::run(long, long, long, float const*, long, float const*, long, float*, long, float, Eigen::internal::level3_blocking<float, float>&, Eigen::internal::GemmParallelInfo<long>*) [22]
                0.00    0.00      22/24          frame_dummy [1]
                0.00    0.00      22/276         print_update_data(update_data_t*, short) [19]
                0.00    0.00      22/263         Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 13, 13, 0, 13, 13> >, Eigen::internal::evaluator<Eigen::Matrix<float, 13, 13, 0, 13, 13> >, Eigen::internal::assign_op<float, float>, 0>, 3, 2>::run(Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 13, 13, 0, 13, 13> >, Eigen::internal::evaluator<Eigen::Matrix<float, 13, 13, 0, 13, 13> >, Eigen::internal::assign_op<float, float>, 0>&) [20]
                0.00    0.00       4/284         Eigen::internal::gemm_pack_lhs<float, long, Eigen::internal::const_blas_data_mapper<float, long, 0>, 8, 4, 0, false, false>::operator()(float*, Eigen::internal::const_blas_data_mapper<float, long, 0> const&, long, long, long, long) [clone .constprop.2999] [17]
                0.00    0.00       4/288         Eigen::internal::gebp_kernel<float, float, long, Eigen::internal::blas_data_mapper<float, long, 0, 0>, 8, 4, false, false>::operator()(Eigen::internal::blas_data_mapper<float, long, 0, 0> const&, float const*, float const*, long, long, long, float, long, long, long, long) [16]
                0.00    0.00       3/279         Eigen::internal::gemm_pack_rhs<float, long, Eigen::internal::const_blas_data_mapper<float, long, 0>, 4, 0, false, false>::operator()(float*, Eigen::internal::const_blas_data_mapper<float, long, 0> const&, long, long, long, long) [clone .constprop.3000] [18]
-----------------------------------------------
                0.00    0.00      24/24          Eigen::internal::partial_lu_impl<float, 0, int>::unblocked_lu(Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>&, int*, int&) [36]
[23]     0.0    0.00    0.00      24         void Eigen::internal::outer_product_selector_run<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false>, 1, -1, false>, Eigen::internal::generic_product_impl<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false>, 1, -1, false>, Eigen::DenseShape, Eigen::DenseShape, 5>::sub>(Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>&, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> const&, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false>, 1, -1, false> const&, Eigen::internal::generic_product_impl<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false>, 1, -1, false>, Eigen::DenseShape, Eigen::DenseShape, 5>::sub const&, Eigen::internal::false_type const&) [23]
-----------------------------------------------
                0.00    0.00       1/19          resize_qp_mats(short) [74]
                0.00    0.00       1/19          solve_mpc(update_data_t*, problem_setup*) [78]
                0.00    0.00       2/19          Eigen::DenseStorage<float, -1, -1, -1, 0>::DenseStorage(Eigen::DenseStorage<float, -1, -1, -1, 0> const&) [41]
                0.00    0.00       5/19          Eigen::PlainObjectBase<Eigen::Matrix<float, -1, 1, 0, -1, 1> >::resize(long, long) [clone .constprop.2933] [32]
                0.00    0.00      10/19          Eigen::PlainObjectBase<Eigen::Matrix<float, -1, -1, 0, -1, -1> >::resize(long, long) [30]
[24]     0.0    0.00    0.00      19         Eigen::internal::aligned_malloc(unsigned long) [24]
-----------------------------------------------
                0.00    0.00      14/14          solve_mpc(update_data_t*, problem_setup*) [78]
[25]     0.0    0.00    0.00      14         Eigen::CommaInitializer<Eigen::Matrix<float, 5, 3, 0, 5, 3> >::operator,(float const&) [25]
-----------------------------------------------
                0.00    0.00       1/13          Eigen::internal::triangular_solve_matrix<float, long, 1, 2, false, 0, 0>::run(long, long, float const*, long, float*, long, Eigen::internal::level3_blocking<float, float>&) [63]
                0.00    0.00       3/13          void Eigen::internal::evaluateProductBlockingSizesHeuristic<float, float, 4, long>(long&, long&, long&, long) [40]
                0.00    0.00       4/13          Eigen::internal::triangular_solve_matrix<float, long, 1, 5, false, 0, 0>::run(long, long, float const*, long, float*, long, Eigen::internal::level3_blocking<float, float>&) [37]
                0.00    0.00       5/13          void Eigen::internal::evaluateProductBlockingSizesHeuristic<float, float, 1, long>(long&, long&, long&, long) [33]
[26]     0.0    0.00    0.00      13         Eigen::internal::manage_caching_sizes(Eigen::Action, long*, long*, long*) [26]
                0.00    0.00       1/1           Eigen::internal::queryCacheSizes(int&, int&, int&) [60]
-----------------------------------------------
                0.00    0.00      11/11          void Eigen::MatrixPower<Eigen::Matrix<float, 13, 13, 0, 13, 13> >::compute<Eigen::Block<Eigen::Matrix<float, -1, 13, 0, -1, 13>, -1, -1, false> >(Eigen::Block<Eigen::Matrix<float, -1, 13, 0, -1, 13>, -1, -1, false>&, float) [28]
[27]     0.0    0.00    0.00      11         void Eigen::MatrixPower<Eigen::Matrix<float, 13, 13, 0, 13, 13> >::computeIntPower<Eigen::Block<Eigen::Matrix<float, -1, 13, 0, -1, 13>, -1, -1, false> >(Eigen::Block<Eigen::Matrix<float, -1, 13, 0, -1, 13>, -1, -1, false>&, float) [27]
                0.00    0.00      22/25          Eigen::internal::general_matrix_matrix_product<long, float, 0, false, float, 0, false, 0>::run(long, long, long, float const*, long, float const*, long, float*, long, float, Eigen::internal::level3_blocking<float, float>&, Eigen::internal::GemmParallelInfo<long>*) [22]
                0.00    0.00      20/276         print_update_data(update_data_t*, short) [19]
                0.00    0.00      11/263         Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 13, 13, 0, 13, 13> >, Eigen::internal::evaluator<Eigen::Matrix<float, 13, 13, 0, 13, 13> >, Eigen::internal::assign_op<float, float>, 0>, 3, 2>::run(Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 13, 13, 0, 13, 13> >, Eigen::internal::evaluator<Eigen::Matrix<float, 13, 13, 0, 13, 13> >, Eigen::internal::assign_op<float, float>, 0>&) [20]
-----------------------------------------------
                0.00    0.00      11/11          c2qp(Eigen::Matrix<float, 13, 13, 0, 13, 13>, Eigen::Matrix<float, 13, 12, 0, 13, 12>, float, short) [53]
[28]     0.0    0.00    0.00      11         void Eigen::MatrixPower<Eigen::Matrix<float, 13, 13, 0, 13, 13> >::compute<Eigen::Block<Eigen::Matrix<float, -1, 13, 0, -1, 13>, -1, -1, false> >(Eigen::Block<Eigen::Matrix<float, -1, 13, 0, -1, 13>, -1, -1, false>&, float) [28]
                0.00    0.00      11/11          void Eigen::MatrixPower<Eigen::Matrix<float, 13, 13, 0, 13, 13> >::computeIntPower<Eigen::Block<Eigen::Matrix<float, -1, 13, 0, -1, 13>, -1, -1, false> >(Eigen::Block<Eigen::Matrix<float, -1, 13, 0, -1, 13>, -1, -1, false>&, float) [27]
-----------------------------------------------
                0.00    0.00       4/11          Eigen::internal::triangular_solve_matrix<float, long, 1, 2, false, 0, 0>::run(long, long, float const*, long, float*, long, Eigen::internal::level3_blocking<float, float>&) [63]
                0.00    0.00       7/11          Eigen::internal::triangular_solve_matrix<float, long, 1, 5, false, 0, 0>::run(long, long, float const*, long, float*, long, Eigen::internal::level3_blocking<float, float>&) [37]
[29]     0.0    0.00    0.00      11         Eigen::internal::gemm_pack_rhs<float, long, Eigen::internal::blas_data_mapper<float, long, 0, 0>, 4, 0, false, true>::operator()(float*, Eigen::internal::blas_data_mapper<float, long, 0, 0> const&, long, long, long, long) [29]
-----------------------------------------------
                0.00    0.00       1/10          solve_mpc(update_data_t*, problem_setup*) [78]
                0.00    0.00       2/10          Eigen::PlainObjectBase<Eigen::Matrix<float, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Matrix<float, -1, 1, 0, -1, 1> >(Eigen::DenseBase<Eigen::Matrix<float, -1, 1, 0, -1, 1> > const&) [42]
                0.00    0.00       2/10          void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, -1, 0, -1, -1> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, Eigen::Product<Eigen::Product<Eigen::Transpose<Eigen::Matrix<float, -1, -1, 0, -1, -1> >, Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0>, Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, -1, 0, -1, -1> const> const, Eigen::Matrix<float, -1, -1, 0, -1, -1> const> const> const>, Eigen::internal::assign_op<float, float> >(Eigen::Matrix<float, -1, -1, 0, -1, -1>&, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, -1, 0, -1, -1> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, Eigen::Product<Eigen::Product<Eigen::Transpose<Eigen::Matrix<float, -1, -1, 0, -1, -1> >, Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0>, Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, -1, 0, -1, -1> const> const, Eigen::Matrix<float, -1, -1, 0, -1, -1> const> const> const> const&, Eigen::internal::assign_op<float, float> const&) [65]
                0.00    0.00       5/10          resize_qp_mats(short) [74]
[30]     0.0    0.00    0.00      10         Eigen::PlainObjectBase<Eigen::Matrix<float, -1, -1, 0, -1, -1> >::resize(long, long) [30]
                0.00    0.00      10/19          Eigen::internal::aligned_malloc(unsigned long) [24]
-----------------------------------------------
                0.00    0.00       1/7           solve_mpc(update_data_t*, problem_setup*) [78]
                0.00    0.00       2/7           void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, -1, 0, -1, -1> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, Eigen::Product<Eigen::Product<Eigen::Transpose<Eigen::Matrix<float, -1, -1, 0, -1, -1> >, Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0>, Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, -1, 0, -1, -1> const> const, Eigen::Matrix<float, -1, -1, 0, -1, -1> const> const> const>, Eigen::internal::assign_op<float, float> >(Eigen::Matrix<float, -1, -1, 0, -1, -1>&, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, -1, 0, -1, -1> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, Eigen::Product<Eigen::Product<Eigen::Transpose<Eigen::Matrix<float, -1, -1, 0, -1, -1> >, Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0>, Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, -1, 0, -1, -1> const> const, Eigen::Matrix<float, -1, -1, 0, -1, -1> const> const> const> const&, Eigen::internal::assign_op<float, float> const&) [65]
                0.00    0.00       4/7           resize_qp_mats(short) [74]
[31]     0.0    0.00    0.00       7         print_problem_setup(problem_setup*) [31]
-----------------------------------------------
                0.00    0.00       2/7           solve_mpc(update_data_t*, problem_setup*) [78]
                0.00    0.00       5/7           resize_qp_mats(short) [74]
[32]     0.0    0.00    0.00       7         Eigen::PlainObjectBase<Eigen::Matrix<float, -1, 1, 0, -1, 1> >::resize(long, long) [clone .constprop.2933] [32]
                0.00    0.00       5/19          Eigen::internal::aligned_malloc(unsigned long) [24]
-----------------------------------------------
                0.00    0.00       1/5           solve_mpc(update_data_t*, problem_setup*) [78]
                0.00    0.00       2/5           Eigen::internal::partial_lu_impl<float, 0, int>::blocked_lu(long, long, float*, long, int*, int&, long) [59]
                0.00    0.00       2/5           void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, -1, 0, -1, -1> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, Eigen::Product<Eigen::Product<Eigen::Transpose<Eigen::Matrix<float, -1, -1, 0, -1, -1> >, Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0>, Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, -1, 0, -1, -1> const> const, Eigen::Matrix<float, -1, -1, 0, -1, -1> const> const> const>, Eigen::internal::assign_op<float, float> >(Eigen::Matrix<float, -1, -1, 0, -1, -1>&, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, -1, 0, -1, -1> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, Eigen::Product<Eigen::Product<Eigen::Transpose<Eigen::Matrix<float, -1, -1, 0, -1, -1> >, Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0>, Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, -1, 0, -1, -1> const> const, Eigen::Matrix<float, -1, -1, 0, -1, -1> const> const> const> const&, Eigen::internal::assign_op<float, float> const&) [65]
[33]     0.0    0.00    0.00       5         void Eigen::internal::evaluateProductBlockingSizesHeuristic<float, float, 1, long>(long&, long&, long&, long) [33]
                0.00    0.00       5/13          Eigen::internal::manage_caching_sizes(Eigen::Action, long*, long*, long*) [26]
-----------------------------------------------
                0.00    0.00       4/4           solve_mpc(update_data_t*, problem_setup*) [78]
[34]     0.0    0.00    0.00       4         matrix_to_real(double*, Eigen::Matrix<float, -1, -1, 0, -1, -1>, short, short) [34]
-----------------------------------------------
                0.00    0.00       4/4           Eigen::internal::general_matrix_matrix_product<long, float, 1, false, float, 0, false, 0>::run(long, long, long, float const*, long, float const*, long, float*, long, float, Eigen::internal::level3_blocking<float, float>&, Eigen::internal::GemmParallelInfo<long>*) [45]
[35]     0.0    0.00    0.00       4         Eigen::Matrix<float, -1, 13, 0, -1, 13>::~Matrix() [35]
-----------------------------------------------
                0.00    0.00       4/4           Eigen::internal::partial_lu_impl<float, 0, int>::blocked_lu(long, long, float*, long, int*, int&, long) [59]
[36]     0.0    0.00    0.00       4         Eigen::internal::partial_lu_impl<float, 0, int>::unblocked_lu(Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>&, int*, int&) [36]
                0.00    0.00      24/24          void Eigen::internal::outer_product_selector_run<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false>, 1, -1, false>, Eigen::internal::generic_product_impl<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false>, 1, -1, false>, Eigen::DenseShape, Eigen::DenseShape, 5>::sub>(Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>&, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> const&, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false>, 1, -1, false> const&, Eigen::internal::generic_product_impl<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false>, 1, -1, false>, Eigen::DenseShape, Eigen::DenseShape, 5>::sub const&, Eigen::internal::false_type const&) [23]
-----------------------------------------------
                0.00    0.00       1/4           void Eigen::internal::matrix_exp_compute<Eigen::Matrix<float, 25, 25, 0, 25, 25>, Eigen::Matrix<float, 25, 25, 0, 25, 25> >(Eigen::Matrix<float, 25, 25, 0, 25, 25> const&, Eigen::Matrix<float, 25, 25, 0, 25, 25>&) [62]
                0.00    0.00       3/4           Eigen::internal::partial_lu_impl<float, 0, int>::blocked_lu(long, long, float*, long, int*, int&, long) [59]
[37]     0.0    0.00    0.00       4         Eigen::internal::triangular_solve_matrix<float, long, 1, 5, false, 0, 0>::run(long, long, float const*, long, float*, long, Eigen::internal::level3_blocking<float, float>&) [37]
                0.00    0.00       7/11          Eigen::internal::gemm_pack_rhs<float, long, Eigen::internal::blas_data_mapper<float, long, 0, 0>, 4, 0, false, true>::operator()(float*, Eigen::internal::blas_data_mapper<float, long, 0, 0> const&, long, long, long, long) [29]
                0.00    0.00       4/13          Eigen::internal::manage_caching_sizes(Eigen::Action, long*, long*, long*) [26]
                0.00    0.00       3/284         Eigen::internal::gemm_pack_lhs<float, long, Eigen::internal::const_blas_data_mapper<float, long, 0>, 8, 4, 0, false, false>::operator()(float*, Eigen::internal::const_blas_data_mapper<float, long, 0> const&, long, long, long, long) [clone .constprop.2999] [17]
                0.00    0.00       3/288         Eigen::internal::gebp_kernel<float, float, long, Eigen::internal::blas_data_mapper<float, long, 0, 0>, 8, 4, false, false>::operator()(Eigen::internal::blas_data_mapper<float, long, 0, 0> const&, float const*, float const*, long, long, long, float, long, long, long, long) [16]
-----------------------------------------------
                0.00    0.00       3/3           solve_mpc(update_data_t*, problem_setup*) [78]
[38]     0.0    0.00    0.00       3         Eigen::CommaInitializer<Eigen::Matrix<float, 13, 1, 0, 13, 1> >::operator,(float const&) [38]
-----------------------------------------------
                0.00    0.00       3/3           solve_mpc(update_data_t*, problem_setup*) [78]
[39]     0.0    0.00    0.00       3         Eigen::CommaInitializer<Eigen::Matrix<float, 13, 1, 0, 13, 1> >& Eigen::CommaInitializer<Eigen::Matrix<float, 13, 1, 0, 13, 1> >::operator,<Eigen::Matrix<float, 3, 1, 0, 3, 1> >(Eigen::DenseBase<Eigen::Matrix<float, 3, 1, 0, 3, 1> > const&) [39]
-----------------------------------------------
                0.00    0.00       3/3           Eigen::internal::partial_lu_impl<float, 0, int>::blocked_lu(long, long, float*, long, int*, int&, long) [59]
[40]     0.0    0.00    0.00       3         void Eigen::internal::evaluateProductBlockingSizesHeuristic<float, float, 4, long>(long&, long&, long&, long) [40]
                0.00    0.00       3/13          Eigen::internal::manage_caching_sizes(Eigen::Action, long*, long*, long*) [26]
-----------------------------------------------
                0.00    0.00       2/2           solve_mpc(update_data_t*, problem_setup*) [78]
[41]     0.0    0.00    0.00       2         Eigen::DenseStorage<float, -1, -1, -1, 0>::DenseStorage(Eigen::DenseStorage<float, -1, -1, -1, 0> const&) [41]
                0.00    0.00       2/19          Eigen::internal::aligned_malloc(unsigned long) [24]
-----------------------------------------------
                0.00    0.00       2/2           solve_mpc(update_data_t*, problem_setup*) [78]
[42]     0.0    0.00    0.00       2         Eigen::PlainObjectBase<Eigen::Matrix<float, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Matrix<float, -1, 1, 0, -1, 1> >(Eigen::DenseBase<Eigen::Matrix<float, -1, 1, 0, -1, 1> > const&) [42]
                0.00    0.00       2/10          Eigen::PlainObjectBase<Eigen::Matrix<float, -1, -1, 0, -1, -1> >::resize(long, long) [30]
-----------------------------------------------
                0.00    0.00       2/2           ct_ss_mats(Eigen::Matrix<float, 3, 3, 0, 3, 3>, float, Eigen::Matrix<float, 3, 4, 0, 3, 4>, Eigen::Matrix<float, 3, 3, 0, 3, 3>, Eigen::Matrix<float, 13, 13, 0, 13, 13>&, Eigen::Matrix<float, 13, 12, 0, 13, 12>&) [51]
[43]     0.0    0.00    0.00       2         Eigen::Block<Eigen::Matrix<float, 13, 13, 0, 13, 13>, -1, -1, false>::Block(Eigen::Matrix<float, 13, 13, 0, 13, 13>&, long, long, long, long) [43]
-----------------------------------------------
                0.00    0.00       1/2           Eigen::PartialPivLU<Eigen::Matrix<float, 25, 25, 0, 25, 25> >::compute() [55]
                0.00    0.00       1/2           void Eigen::internal::matrix_exp_compute<Eigen::Matrix<float, 25, 25, 0, 25, 25>, Eigen::Matrix<float, 25, 25, 0, 25, 25> >(Eigen::Matrix<float, 25, 25, 0, 25, 25> const&, Eigen::Matrix<float, 25, 25, 0, 25, 25>&) [62]
[44]     0.0    0.00    0.00       2         Eigen::internal::redux_impl<Eigen::internal::scalar_max_op<float, float>, Eigen::internal::redux_evaluator<Eigen::PartialReduxExpr<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<float>, Eigen::Matrix<float, 25, 25, 0, 25, 25> const> const, Eigen::internal::member_sum<float>, 0> >, 0, 0>::run(Eigen::internal::redux_evaluator<Eigen::PartialReduxExpr<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<float>, Eigen::Matrix<float, 25, 25, 0, 25, 25> const> const, Eigen::internal::member_sum<float>, 0> > const&, Eigen::internal::scalar_max_op<float, float> const&) [44]
-----------------------------------------------
                0.00    0.00       1/2           solve_mpc(update_data_t*, problem_setup*) [78]
                0.00    0.00       1/2           Eigen::internal::gemm_functor<float, long, Eigen::internal::general_matrix_matrix_product<long, float, 1, false, float, 0, false, 0>, Eigen::Transpose<Eigen::Matrix<float, -1, -1, 0, -1, -1> const>, Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, float, float, -1, -1, -1, 1, false> >::operator()(long, long, long, long, Eigen::internal::GemmParallelInfo<long>*) const [67]
[45]     0.0    0.00    0.00       2         Eigen::internal::general_matrix_matrix_product<long, float, 1, false, float, 0, false, 0>::run(long, long, long, float const*, long, float const*, long, float*, long, float, Eigen::internal::level3_blocking<float, float>&, Eigen::internal::GemmParallelInfo<long>*) [45]
                0.00    0.00       4/4           Eigen::Matrix<float, -1, 13, 0, -1, 13>::~Matrix() [35]
                0.00    0.00       4/288         Eigen::internal::gebp_kernel<float, float, long, Eigen::internal::blas_data_mapper<float, long, 0, 0>, 8, 4, false, false>::operator()(Eigen::internal::blas_data_mapper<float, long, 0, 0> const&, float const*, float const*, long, long, long, float, long, long, long, long) [16]
                0.00    0.00       2/279         Eigen::internal::gemm_pack_rhs<float, long, Eigen::internal::const_blas_data_mapper<float, long, 0>, 4, 0, false, false>::operator()(float*, Eigen::internal::const_blas_data_mapper<float, long, 0> const&, long, long, long, long) [clone .constprop.3000] [18]
-----------------------------------------------
                0.00    0.00       2/2           solve_mpc(update_data_t*, problem_setup*) [78]
[46]     0.0    0.00    0.00       2         Eigen::internal::general_matrix_vector_product<long, float, Eigen::internal::const_blas_data_mapper<float, long, 0>, 0, false, float, Eigen::internal::const_blas_data_mapper<float, long, 1>, false, 0>::run(long, long, Eigen::internal::const_blas_data_mapper<float, long, 0> const&, Eigen::internal::const_blas_data_mapper<float, long, 1> const&, float*, long, float) [46]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [580]
[47]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z18print_matlab_arrayPdtt [47]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [580]
[48]     0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN10RobotState3setEPfS0_S0_S0_S0_f [48]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [580]
[49]     0.0    0.00    0.00       1         _GLOBAL__sub_I_problem_configuration [49]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [580]
[50]     0.0    0.00    0.00       1         _GLOBAL__sub_I_rs [50]
-----------------------------------------------
                0.00    0.00       1/1           solve_mpc(update_data_t*, problem_setup*) [78]
[51]     0.0    0.00    0.00       1         ct_ss_mats(Eigen::Matrix<float, 3, 3, 0, 3, 3>, float, Eigen::Matrix<float, 3, 4, 0, 3, 4>, Eigen::Matrix<float, 3, 3, 0, 3, 3>, Eigen::Matrix<float, 13, 13, 0, 13, 13>&, Eigen::Matrix<float, 13, 12, 0, 13, 12>&) [51]
                0.00    0.00      64/64          Eigen::CommaInitializer<Eigen::Matrix<float, 3, 3, 0, 3, 3> >::operator,(float const&) [21]
                0.00    0.00       2/24          frame_dummy [1]
                0.00    0.00       2/2           Eigen::Block<Eigen::Matrix<float, 13, 13, 0, 13, 13>, -1, -1, false>::Block(Eigen::Matrix<float, 13, 13, 0, 13, 13>&, long, long, long, long) [43]
-----------------------------------------------
                0.00    0.00       1/1           solve_mpc(update_data_t*, problem_setup*) [78]
[52]     0.0    0.00    0.00       1         quat_to_rpy(Eigen::Quaternion<float, 0>, Eigen::Matrix<float, 3, 1, 0, 3, 1>&) [52]
-----------------------------------------------
                0.00    0.00       1/1           solve_mpc(update_data_t*, problem_setup*) [78]
[53]     0.0    0.00    0.00       1         c2qp(Eigen::Matrix<float, 13, 13, 0, 13, 13>, Eigen::Matrix<float, 13, 12, 0, 13, 12>, float, short) [53]
                0.00    0.00     230/263         Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 13, 13, 0, 13, 13> >, Eigen::internal::evaluator<Eigen::Matrix<float, 13, 13, 0, 13, 13> >, Eigen::internal::assign_op<float, float>, 0>, 3, 2>::run(Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 13, 13, 0, 13, 13> >, Eigen::internal::evaluator<Eigen::Matrix<float, 13, 13, 0, 13, 13> >, Eigen::internal::assign_op<float, float>, 0>&) [20]
                0.00    0.00     230/276         print_update_data(update_data_t*, short) [19]
                0.00    0.00      11/11          void Eigen::MatrixPower<Eigen::Matrix<float, 13, 13, 0, 13, 13> >::compute<Eigen::Block<Eigen::Matrix<float, -1, 13, 0, -1, 13>, -1, -1, false> >(Eigen::Block<Eigen::Matrix<float, -1, 13, 0, -1, 13>, -1, -1, false>&, float) [28]
                0.00    0.00       1/1           void Eigen::internal::matrix_exp_compute<Eigen::Matrix<float, 25, 25, 0, 25, 25>, Eigen::Matrix<float, 25, 25, 0, 25, 25> >(Eigen::Matrix<float, 25, 25, 0, 25, 25> const&, Eigen::Matrix<float, 25, 25, 0, 25, 25>&) [62]
                0.00    0.00       1/1           float Eigen::DenseBase<Eigen::Diagonal<Eigen::Matrix<float, -1, -1, 0, -1, -1> const, 0> >::redux<Eigen::internal::scalar_sum_op<float, float> >(Eigen::internal::scalar_sum_op<float, float> const&) const [69]
-----------------------------------------------
                0.00    0.00       1/1           solve_mpc(update_data_t*, problem_setup*) [78]
[54]     0.0    0.00    0.00       1         RobotState::set(float*, float*, float*, float*, float*, float) [54]
-----------------------------------------------
                0.00    0.00       1/1           void Eigen::internal::matrix_exp_compute<Eigen::Matrix<float, 25, 25, 0, 25, 25>, Eigen::Matrix<float, 25, 25, 0, 25, 25> >(Eigen::Matrix<float, 25, 25, 0, 25, 25> const&, Eigen::Matrix<float, 25, 25, 0, 25, 25>&) [62]
[55]     0.0    0.00    0.00       1         Eigen::PartialPivLU<Eigen::Matrix<float, 25, 25, 0, 25, 25> >::compute() [55]
                0.00    0.00       1/2           Eigen::internal::redux_impl<Eigen::internal::scalar_max_op<float, float>, Eigen::internal::redux_evaluator<Eigen::PartialReduxExpr<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<float>, Eigen::Matrix<float, 25, 25, 0, 25, 25> const> const, Eigen::internal::member_sum<float>, 0> >, 0, 0>::run(Eigen::internal::redux_evaluator<Eigen::PartialReduxExpr<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<float>, Eigen::Matrix<float, 25, 25, 0, 25, 25> const> const, Eigen::internal::member_sum<float>, 0> > const&, Eigen::internal::scalar_max_op<float, float> const&) [44]
                0.00    0.00       1/1           Eigen::internal::partial_lu_impl<float, 0, int>::blocked_lu(long, long, float*, long, int*, int&, long) [59]
-----------------------------------------------
                0.00    0.00       1/1           std::ostream& Eigen::operator<< <Eigen::Matrix<float, 13, 12, 0, 13, 12> >(std::ostream&, Eigen::DenseBase<Eigen::Matrix<float, 13, 12, 0, 13, 12> > const&) [139]
[56]     0.0    0.00    0.00       1         std::ostream& Eigen::internal::print_matrix<Eigen::Matrix<float, 13, 12, 0, 13, 12> >(std::ostream&, Eigen::Matrix<float, 13, 12, 0, 13, 12> const&, Eigen::IOFormat const&) [56]
-----------------------------------------------
                0.00    0.00       1/1           std::ostream& Eigen::operator<< <Eigen::Matrix<float, 13, 13, 0, 13, 13> >(std::ostream&, Eigen::DenseBase<Eigen::Matrix<float, 13, 13, 0, 13, 13> > const&) [140]
[57]     0.0    0.00    0.00       1         std::ostream& Eigen::internal::print_matrix<Eigen::Matrix<float, 13, 13, 0, 13, 13> >(std::ostream&, Eigen::Matrix<float, 13, 13, 0, 13, 13> const&, Eigen::IOFormat const&) [57]
-----------------------------------------------
                0.00    0.00       1/1           std::ostream& Eigen::operator<< <Eigen::Matrix<float, 3, 1, 0, 3, 1> >(std::ostream&, Eigen::DenseBase<Eigen::Matrix<float, 3, 1, 0, 3, 1> > const&) [141]
[58]     0.0    0.00    0.00       1         std::ostream& Eigen::internal::print_matrix<Eigen::Matrix<float, 3, 1, 0, 3, 1> >(std::ostream&, Eigen::Matrix<float, 3, 1, 0, 3, 1> const&, Eigen::IOFormat const&) [58]
-----------------------------------------------
                                   4             Eigen::internal::partial_lu_impl<float, 0, int>::blocked_lu(long, long, float*, long, int*, int&, long) [59]
                0.00    0.00       1/1           Eigen::PartialPivLU<Eigen::Matrix<float, 25, 25, 0, 25, 25> >::compute() [55]
[59]     0.0    0.00    0.00       1+4       Eigen::internal::partial_lu_impl<float, 0, int>::blocked_lu(long, long, float*, long, int*, int&, long) [59]
                0.00    0.00       4/4           Eigen::internal::partial_lu_impl<float, 0, int>::unblocked_lu(Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>&, int*, int&) [36]
                0.00    0.00       3/3           void Eigen::internal::evaluateProductBlockingSizesHeuristic<float, float, 4, long>(long&, long&, long&, long) [40]
                0.00    0.00       3/4           Eigen::internal::triangular_solve_matrix<float, long, 1, 5, false, 0, 0>::run(long, long, float const*, long, float*, long, Eigen::internal::level3_blocking<float, float>&) [37]
                0.00    0.00       2/5           void Eigen::internal::evaluateProductBlockingSizesHeuristic<float, float, 1, long>(long&, long&, long&, long) [33]
                0.00    0.00       2/25          Eigen::internal::general_matrix_matrix_product<long, float, 0, false, float, 0, false, 0>::run(long, long, long, float const*, long, float const*, long, float*, long, float, Eigen::internal::level3_blocking<float, float>&, Eigen::internal::GemmParallelInfo<long>*) [22]
                0.00    0.00       1/1           float Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false> const, 1, -1, false> const> const, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false> const, -1, 1, true> const> >::redux<Eigen::internal::scalar_sum_op<float, float> >(Eigen::internal::scalar_sum_op<float, float> const&) const [68]
                                   4             Eigen::internal::partial_lu_impl<float, 0, int>::blocked_lu(long, long, float*, long, int*, int&, long) [59]
-----------------------------------------------
                0.00    0.00       1/1           Eigen::internal::manage_caching_sizes(Eigen::Action, long*, long*, long*) [26]
[60]     0.0    0.00    0.00       1         Eigen::internal::queryCacheSizes(int&, int&, int&) [60]
-----------------------------------------------
                0.00    0.00       1/1           void Eigen::internal::matrix_exp_compute<Eigen::Matrix<float, 25, 25, 0, 25, 25>, Eigen::Matrix<float, 25, 25, 0, 25, 25> >(Eigen::Matrix<float, 25, 25, 0, 25, 25> const&, Eigen::Matrix<float, 25, 25, 0, 25, 25>&) [62]
[61]     0.0    0.00    0.00       1         void Eigen::internal::matrix_exp_pade3<Eigen::Matrix<float, 25, 25, 0, 25, 25> >(Eigen::Matrix<float, 25, 25, 0, 25, 25> const&, Eigen::Matrix<float, 25, 25, 0, 25, 25>&, Eigen::Matrix<float, 25, 25, 0, 25, 25>&) [61]
                0.00    0.00       4/276         print_update_data(update_data_t*, short) [19]
-----------------------------------------------
                0.00    0.00       1/1           c2qp(Eigen::Matrix<float, 13, 13, 0, 13, 13>, Eigen::Matrix<float, 13, 12, 0, 13, 12>, float, short) [53]
[62]     0.0    0.00    0.00       1         void Eigen::internal::matrix_exp_compute<Eigen::Matrix<float, 25, 25, 0, 25, 25>, Eigen::Matrix<float, 25, 25, 0, 25, 25> >(Eigen::Matrix<float, 25, 25, 0, 25, 25> const&, Eigen::Matrix<float, 25, 25, 0, 25, 25>&) [62]
                0.00    0.00       1/2           Eigen::internal::redux_impl<Eigen::internal::scalar_max_op<float, float>, Eigen::internal::redux_evaluator<Eigen::PartialReduxExpr<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<float>, Eigen::Matrix<float, 25, 25, 0, 25, 25> const> const, Eigen::internal::member_sum<float>, 0> >, 0, 0>::run(Eigen::internal::redux_evaluator<Eigen::PartialReduxExpr<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<float>, Eigen::Matrix<float, 25, 25, 0, 25, 25> const> const, Eigen::internal::member_sum<float>, 0> > const&, Eigen::internal::scalar_max_op<float, float> const&) [44]
                0.00    0.00       1/1           Eigen::PartialPivLU<Eigen::Matrix<float, 25, 25, 0, 25, 25> >::compute() [55]
                0.00    0.00       1/1           void Eigen::internal::permutation_matrix_product<Eigen::Matrix<float, 25, 25, 0, 25, 25>, 1, false, Eigen::DenseShape>::run<Eigen::Matrix<float, 25, 25, 0, 25, 25>, Eigen::PermutationMatrix<25, 25, int> >(Eigen::Matrix<float, 25, 25, 0, 25, 25>&, Eigen::PermutationMatrix<25, 25, int> const&, Eigen::Matrix<float, 25, 25, 0, 25, 25> const&) [66]
                0.00    0.00       1/4           Eigen::internal::triangular_solve_matrix<float, long, 1, 5, false, 0, 0>::run(long, long, float const*, long, float*, long, Eigen::internal::level3_blocking<float, float>&) [37]
                0.00    0.00       1/1           Eigen::internal::triangular_solve_matrix<float, long, 1, 2, false, 0, 0>::run(long, long, float const*, long, float*, long, Eigen::internal::level3_blocking<float, float>&) [63]
                0.00    0.00       1/1           void Eigen::internal::matrix_exp_pade3<Eigen::Matrix<float, 25, 25, 0, 25, 25> >(Eigen::Matrix<float, 25, 25, 0, 25, 25> const&, Eigen::Matrix<float, 25, 25, 0, 25, 25>&, Eigen::Matrix<float, 25, 25, 0, 25, 25>&) [61]
-----------------------------------------------
                0.00    0.00       1/1           void Eigen::internal::matrix_exp_compute<Eigen::Matrix<float, 25, 25, 0, 25, 25>, Eigen::Matrix<float, 25, 25, 0, 25, 25> >(Eigen::Matrix<float, 25, 25, 0, 25, 25> const&, Eigen::Matrix<float, 25, 25, 0, 25, 25>&) [62]
[63]     0.0    0.00    0.00       1         Eigen::internal::triangular_solve_matrix<float, long, 1, 2, false, 0, 0>::run(long, long, float const*, long, float*, long, Eigen::internal::level3_blocking<float, float>&) [63]
                0.00    0.00       4/11          Eigen::internal::gemm_pack_rhs<float, long, Eigen::internal::blas_data_mapper<float, long, 0, 0>, 4, 0, false, true>::operator()(float*, Eigen::internal::blas_data_mapper<float, long, 0, 0> const&, long, long, long, long) [29]
                0.00    0.00       3/284         Eigen::internal::gemm_pack_lhs<float, long, Eigen::internal::const_blas_data_mapper<float, long, 0>, 8, 4, 0, false, false>::operator()(float*, Eigen::internal::const_blas_data_mapper<float, long, 0> const&, long, long, long, long) [clone .constprop.2999] [17]
                0.00    0.00       3/288         Eigen::internal::gebp_kernel<float, float, long, Eigen::internal::blas_data_mapper<float, long, 0, 0>, 8, 4, false, false>::operator()(Eigen::internal::blas_data_mapper<float, long, 0, 0> const&, float const*, float const*, long, long, long, float, long, long, long, long) [16]
                0.00    0.00       1/13          Eigen::internal::manage_caching_sizes(Eigen::Action, long*, long*, long*) [26]
-----------------------------------------------
                0.00    0.00       1/1           solve_mpc(update_data_t*, problem_setup*) [78]
[64]     0.0    0.00    0.00       1         void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<float, 3, 3, 0, 3, 3>, Eigen::Product<Eigen::Matrix<float, 3, 3, 0, 3, 3>, Eigen::Matrix<float, 3, 3, 0, 3, 3>, 1>, Eigen::internal::assign_op<float, float> >(Eigen::Matrix<float, 3, 3, 0, 3, 3>&, Eigen::Product<Eigen::Matrix<float, 3, 3, 0, 3, 3>, Eigen::Matrix<float, 3, 3, 0, 3, 3>, 1> const&, Eigen::internal::assign_op<float, float> const&) [64]
-----------------------------------------------
                0.00    0.00       1/1           solve_mpc(update_data_t*, problem_setup*) [78]
[65]     0.0    0.00    0.00       1         void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, -1, 0, -1, -1> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, Eigen::Product<Eigen::Product<Eigen::Transpose<Eigen::Matrix<float, -1, -1, 0, -1, -1> >, Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0>, Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, -1, 0, -1, -1> const> const, Eigen::Matrix<float, -1, -1, 0, -1, -1> const> const> const>, Eigen::internal::assign_op<float, float> >(Eigen::Matrix<float, -1, -1, 0, -1, -1>&, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, -1, 0, -1, -1> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, Eigen::Product<Eigen::Product<Eigen::Transpose<Eigen::Matrix<float, -1, -1, 0, -1, -1> >, Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0>, Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, -1, 0, -1, -1> const> const, Eigen::Matrix<float, -1, -1, 0, -1, -1> const> const> const> const&, Eigen::internal::assign_op<float, float> const&) [65]
                0.00    0.00       2/10          Eigen::PlainObjectBase<Eigen::Matrix<float, -1, -1, 0, -1, -1> >::resize(long, long) [30]
                0.00    0.00       2/7           print_problem_setup(problem_setup*) [31]
                0.00    0.00       2/5           void Eigen::internal::evaluateProductBlockingSizesHeuristic<float, float, 1, long>(long&, long&, long&, long) [33]
                0.00    0.00       1/25          Eigen::internal::general_matrix_matrix_product<long, float, 0, false, float, 0, false, 0>::run(long, long, long, float const*, long, float const*, long, float*, long, float, Eigen::internal::level3_blocking<float, float>&, Eigen::internal::GemmParallelInfo<long>*) [22]
                0.00    0.00       1/1           Eigen::internal::gemm_functor<float, long, Eigen::internal::general_matrix_matrix_product<long, float, 1, false, float, 0, false, 0>, Eigen::Transpose<Eigen::Matrix<float, -1, -1, 0, -1, -1> const>, Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, float, float, -1, -1, -1, 1, false> >::operator()(long, long, long, long, Eigen::internal::GemmParallelInfo<long>*) const [67]
-----------------------------------------------
                0.00    0.00       1/1           void Eigen::internal::matrix_exp_compute<Eigen::Matrix<float, 25, 25, 0, 25, 25>, Eigen::Matrix<float, 25, 25, 0, 25, 25> >(Eigen::Matrix<float, 25, 25, 0, 25, 25> const&, Eigen::Matrix<float, 25, 25, 0, 25, 25>&) [62]
[66]     0.0    0.00    0.00       1         void Eigen::internal::permutation_matrix_product<Eigen::Matrix<float, 25, 25, 0, 25, 25>, 1, false, Eigen::DenseShape>::run<Eigen::Matrix<float, 25, 25, 0, 25, 25>, Eigen::PermutationMatrix<25, 25, int> >(Eigen::Matrix<float, 25, 25, 0, 25, 25>&, Eigen::PermutationMatrix<25, 25, int> const&, Eigen::Matrix<float, 25, 25, 0, 25, 25> const&) [66]
-----------------------------------------------
                0.00    0.00       1/1           void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, -1, 0, -1, -1> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, Eigen::Product<Eigen::Product<Eigen::Transpose<Eigen::Matrix<float, -1, -1, 0, -1, -1> >, Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0>, Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, -1, 0, -1, -1> const> const, Eigen::Matrix<float, -1, -1, 0, -1, -1> const> const> const>, Eigen::internal::assign_op<float, float> >(Eigen::Matrix<float, -1, -1, 0, -1, -1>&, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, -1, 0, -1, -1> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, Eigen::Product<Eigen::Product<Eigen::Transpose<Eigen::Matrix<float, -1, -1, 0, -1, -1> >, Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0>, Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, -1, 0, -1, -1> const> const, Eigen::Matrix<float, -1, -1, 0, -1, -1> const> const> const> const&, Eigen::internal::assign_op<float, float> const&) [65]
[67]     0.0    0.00    0.00       1         Eigen::internal::gemm_functor<float, long, Eigen::internal::general_matrix_matrix_product<long, float, 1, false, float, 0, false, 0>, Eigen::Transpose<Eigen::Matrix<float, -1, -1, 0, -1, -1> const>, Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, float, float, -1, -1, -1, 1, false> >::operator()(long, long, long, long, Eigen::internal::GemmParallelInfo<long>*) const [67]
                0.00    0.00       1/2           Eigen::internal::general_matrix_matrix_product<long, float, 1, false, float, 0, false, 0>::run(long, long, long, float const*, long, float const*, long, float*, long, float, Eigen::internal::level3_blocking<float, float>&, Eigen::internal::GemmParallelInfo<long>*) [45]
-----------------------------------------------
                0.00    0.00       1/1           Eigen::internal::partial_lu_impl<float, 0, int>::blocked_lu(long, long, float*, long, int*, int&, long) [59]
[68]     0.0    0.00    0.00       1         float Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false> const, 1, -1, false> const> const, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false> const, -1, 1, true> const> >::redux<Eigen::internal::scalar_sum_op<float, float> >(Eigen::internal::scalar_sum_op<float, float> const&) const [68]
-----------------------------------------------
                0.00    0.00       1/1           c2qp(Eigen::Matrix<float, 13, 13, 0, 13, 13>, Eigen::Matrix<float, 13, 12, 0, 13, 12>, float, short) [53]
[69]     0.0    0.00    0.00       1         float Eigen::DenseBase<Eigen::Diagonal<Eigen::Matrix<float, -1, -1, 0, -1, -1> const, 0> >::redux<Eigen::internal::scalar_sum_op<float, float> >(Eigen::internal::scalar_sum_op<float, float> const&) const [69]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

  [47] _GLOBAL__sub_I__Z18print_matlab_arrayPdtt (convex_mpc_test.cpp) [39] Eigen::CommaInitializer<Eigen::Matrix<float, 13, 1, 0, 13, 1> >& Eigen::CommaInitializer<Eigen::Matrix<float, 13, 1, 0, 13, 1> >::operator,<Eigen::Matrix<float, 3, 1, 0, 3, 1> >(Eigen::DenseBase<Eigen::Matrix<float, 3, 1, 0, 3, 1> > const&) [26] Eigen::internal::manage_caching_sizes(Eigen::Action, long*, long*, long*)
  [48] _GLOBAL__sub_I__ZN10RobotState3setEPfS0_S0_S0_S0_f (RobotState.cpp) [21] Eigen::CommaInitializer<Eigen::Matrix<float, 3, 3, 0, 3, 3> >::operator,(float const&) [20] Eigen::internal::dense_assignment_loop<Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 13, 13, 0, 13, 13> >, Eigen::internal::evaluator<Eigen::Matrix<float, 13, 13, 0, 13, 13> >, Eigen::internal::assign_op<float, float>, 0>, 3, 2>::run(Eigen::internal::generic_dense_assignment_kernel<Eigen::internal::evaluator<Eigen::Matrix<float, 13, 13, 0, 13, 13> >, Eigen::internal::evaluator<Eigen::Matrix<float, 13, 13, 0, 13, 13> >, Eigen::internal::assign_op<float, float>, 0>&)
  [49] _GLOBAL__sub_I_problem_configuration (convexMPC_interface.cpp) [25] Eigen::CommaInitializer<Eigen::Matrix<float, 5, 3, 0, 5, 3> >::operator,(float const&) [63] Eigen::internal::triangular_solve_matrix<float, long, 1, 2, false, 0, 0>::run(long, long, float const*, long, float*, long, Eigen::internal::level3_blocking<float, float>&)
  [50] _GLOBAL__sub_I_rs (SolverMPC.cpp) [43] Eigen::Block<Eigen::Matrix<float, 13, 13, 0, 13, 13>, -1, -1, false>::Block(Eigen::Matrix<float, 13, 13, 0, 13, 13>&, long, long, long, long) [37] Eigen::internal::triangular_solve_matrix<float, long, 1, 5, false, 0, 0>::run(long, long, float const*, long, float*, long, Eigen::internal::level3_blocking<float, float>&)
  [51] ct_ss_mats(Eigen::Matrix<float, 3, 3, 0, 3, 3>, float, Eigen::Matrix<float, 3, 4, 0, 3, 4>, Eigen::Matrix<float, 3, 3, 0, 3, 3>, Eigen::Matrix<float, 13, 13, 0, 13, 13>&, Eigen::Matrix<float, 13, 12, 0, 13, 12>&) [35] Eigen::Matrix<float, -1, 13, 0, -1, 13>::~Matrix() [64] void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<float, 3, 3, 0, 3, 3>, Eigen::Product<Eigen::Matrix<float, 3, 3, 0, 3, 3>, Eigen::Matrix<float, 3, 3, 0, 3, 3>, 1>, Eigen::internal::assign_op<float, float> >(Eigen::Matrix<float, 3, 3, 0, 3, 3>&, Eigen::Product<Eigen::Matrix<float, 3, 3, 0, 3, 3>, Eigen::Matrix<float, 3, 3, 0, 3, 3>, 1> const&, Eigen::internal::assign_op<float, float> const&)
  [52] quat_to_rpy(Eigen::Quaternion<float, 0>, Eigen::Matrix<float, 3, 1, 0, 3, 1>&) [44] Eigen::internal::redux_impl<Eigen::internal::scalar_max_op<float, float>, Eigen::internal::redux_evaluator<Eigen::PartialReduxExpr<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<float>, Eigen::Matrix<float, 25, 25, 0, 25, 25> const> const, Eigen::internal::member_sum<float>, 0> >, 0, 0>::run(Eigen::internal::redux_evaluator<Eigen::PartialReduxExpr<Eigen::CwiseUnaryOp<Eigen::internal::scalar_abs_op<float>, Eigen::Matrix<float, 25, 25, 0, 25, 25> const> const, Eigen::internal::member_sum<float>, 0> > const&, Eigen::internal::scalar_max_op<float, float> const&) [65] void Eigen::internal::call_dense_assignment_loop<Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, -1, 0, -1, -1> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, Eigen::Product<Eigen::Product<Eigen::Transpose<Eigen::Matrix<float, -1, -1, 0, -1, -1> >, Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0>, Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, -1, 0, -1, -1> const> const, Eigen::Matrix<float, -1, -1, 0, -1, -1> const> const> const>, Eigen::internal::assign_op<float, float> >(Eigen::Matrix<float, -1, -1, 0, -1, -1>&, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, -1, 0, -1, -1> const> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_sum_op<float, float>, Eigen::Product<Eigen::Product<Eigen::Transpose<Eigen::Matrix<float, -1, -1, 0, -1, -1> >, Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0>, Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0> const, Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::CwiseNullaryOp<Eigen::internal::scalar_constant_op<float>, Eigen::Matrix<float, -1, -1, 0, -1, -1> const> const, Eigen::Matrix<float, -1, -1, 0, -1, -1> const> const> const> const&, Eigen::internal::assign_op<float, float> const&)
  [34] matrix_to_real(double*, Eigen::Matrix<float, -1, -1, 0, -1, -1>, short, short) [16] Eigen::internal::gebp_kernel<float, float, long, Eigen::internal::blas_data_mapper<float, long, 0, 0>, 8, 4, false, false>::operator()(Eigen::internal::blas_data_mapper<float, long, 0, 0> const&, float const*, float const*, long, long, long, float, long, long, long, long) [23] void Eigen::internal::outer_product_selector_run<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false>, 1, -1, false>, Eigen::internal::generic_product_impl<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false>, 1, -1, false>, Eigen::DenseShape, Eigen::DenseShape, 5>::sub>(Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false>&, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false> const&, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false>, 1, -1, false> const&, Eigen::internal::generic_product_impl<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, 1, true>, -1, 1, false>, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, 1, -1, false>, 1, -1, false>, Eigen::DenseShape, Eigen::DenseShape, 5>::sub const&, Eigen::internal::false_type const&)
  [19] print_update_data(update_data_t*, short) [56] std::ostream& Eigen::internal::print_matrix<Eigen::Matrix<float, 13, 12, 0, 13, 12> >(std::ostream&, Eigen::Matrix<float, 13, 12, 0, 13, 12> const&, Eigen::IOFormat const&) [66] void Eigen::internal::permutation_matrix_product<Eigen::Matrix<float, 25, 25, 0, 25, 25>, 1, false, Eigen::DenseShape>::run<Eigen::Matrix<float, 25, 25, 0, 25, 25>, Eigen::PermutationMatrix<25, 25, int> >(Eigen::Matrix<float, 25, 25, 0, 25, 25>&, Eigen::PermutationMatrix<25, 25, int> const&, Eigen::Matrix<float, 25, 25, 0, 25, 25> const&)
  [31] print_problem_setup(problem_setup*) [57] std::ostream& Eigen::internal::print_matrix<Eigen::Matrix<float, 13, 13, 0, 13, 13> >(std::ostream&, Eigen::Matrix<float, 13, 13, 0, 13, 13> const&, Eigen::IOFormat const&) [22] Eigen::internal::general_matrix_matrix_product<long, float, 0, false, float, 0, false, 0>::run(long, long, long, float const*, long, float const*, long, float*, long, float, Eigen::internal::level3_blocking<float, float>&, Eigen::internal::GemmParallelInfo<long>*)
  [53] c2qp(Eigen::Matrix<float, 13, 13, 0, 13, 13>, Eigen::Matrix<float, 13, 12, 0, 13, 12>, float, short) [58] std::ostream& Eigen::internal::print_matrix<Eigen::Matrix<float, 3, 1, 0, 3, 1> >(std::ostream&, Eigen::Matrix<float, 3, 1, 0, 3, 1> const&, Eigen::IOFormat const&) [45] Eigen::internal::general_matrix_matrix_product<long, float, 1, false, float, 0, false, 0>::run(long, long, long, float const*, long, float const*, long, float*, long, float, Eigen::internal::level3_blocking<float, float>&, Eigen::internal::GemmParallelInfo<long>*)
  [54] RobotState::set(float*, float*, float*, float*, float*, float) [17] Eigen::internal::gemm_pack_lhs<float, long, Eigen::internal::const_blas_data_mapper<float, long, 0>, 8, 4, 0, false, false>::operator()(float*, Eigen::internal::const_blas_data_mapper<float, long, 0> const&, long, long, long, long) [clone .constprop.2999] (GeneralBlockPanelKernel.h) [46] Eigen::internal::general_matrix_vector_product<long, float, Eigen::internal::const_blas_data_mapper<float, long, 0>, 0, false, float, Eigen::internal::const_blas_data_mapper<float, long, 1>, false, 0>::run(long, long, Eigen::internal::const_blas_data_mapper<float, long, 0> const&, Eigen::internal::const_blas_data_mapper<float, long, 1> const&, float*, long, float)
  [27] void Eigen::MatrixPower<Eigen::Matrix<float, 13, 13, 0, 13, 13> >::computeIntPower<Eigen::Block<Eigen::Matrix<float, -1, 13, 0, -1, 13>, -1, -1, false> >(Eigen::Block<Eigen::Matrix<float, -1, 13, 0, -1, 13>, -1, -1, false>&, float) [29] Eigen::internal::gemm_pack_rhs<float, long, Eigen::internal::blas_data_mapper<float, long, 0, 0>, 4, 0, false, true>::operator()(float*, Eigen::internal::blas_data_mapper<float, long, 0, 0> const&, long, long, long, long) [33] void Eigen::internal::evaluateProductBlockingSizesHeuristic<float, float, 1, long>(long&, long&, long&, long)
  [28] void Eigen::MatrixPower<Eigen::Matrix<float, 13, 13, 0, 13, 13> >::compute<Eigen::Block<Eigen::Matrix<float, -1, 13, 0, -1, 13>, -1, -1, false> >(Eigen::Block<Eigen::Matrix<float, -1, 13, 0, -1, 13>, -1, -1, false>&, float) [18] Eigen::internal::gemm_pack_rhs<float, long, Eigen::internal::const_blas_data_mapper<float, long, 0>, 4, 0, false, false>::operator()(float*, Eigen::internal::const_blas_data_mapper<float, long, 0> const&, long, long, long, long) [clone .constprop.3000] (GeneralBlockPanelKernel.h) [40] void Eigen::internal::evaluateProductBlockingSizesHeuristic<float, float, 4, long>(long&, long&, long&, long)
  [41] Eigen::DenseStorage<float, -1, -1, -1, 0>::DenseStorage(Eigen::DenseStorage<float, -1, -1, -1, 0> const&) [24] Eigen::internal::aligned_malloc(unsigned long) [67] Eigen::internal::gemm_functor<float, long, Eigen::internal::general_matrix_matrix_product<long, float, 1, false, float, 0, false, 0>, Eigen::Transpose<Eigen::Matrix<float, -1, -1, 0, -1, -1> const>, Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::Matrix<float, -1, -1, 0, -1, -1>, Eigen::internal::gemm_blocking_space<0, float, float, -1, -1, -1, 1, false> >::operator()(long, long, long, long, Eigen::internal::GemmParallelInfo<long>*) const
  [55] Eigen::PartialPivLU<Eigen::Matrix<float, 25, 25, 0, 25, 25> >::compute() [59] Eigen::internal::partial_lu_impl<float, 0, int>::blocked_lu(long, long, float*, long, int*, int&, long) [68] float Eigen::DenseBase<Eigen::CwiseBinaryOp<Eigen::internal::scalar_product_op<float, float>, Eigen::Transpose<Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false> const, 1, -1, false> const> const, Eigen::Block<Eigen::Block<Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>, -1, -1, false> const, -1, 1, true> const> >::redux<Eigen::internal::scalar_sum_op<float, float> >(Eigen::internal::scalar_sum_op<float, float> const&) const
  [32] Eigen::PlainObjectBase<Eigen::Matrix<float, -1, 1, 0, -1, 1> >::resize(long, long) [clone .constprop.2933] (PlainObjectBase.h) [36] Eigen::internal::partial_lu_impl<float, 0, int>::unblocked_lu(Eigen::Block<Eigen::Map<Eigen::Matrix<float, -1, -1, 0, -1, -1>, 0, Eigen::Stride<0, 0> >, -1, -1, false>&, int*, int&) [69] float Eigen::DenseBase<Eigen::Diagonal<Eigen::Matrix<float, -1, -1, 0, -1, -1> const, 0> >::redux<Eigen::internal::scalar_sum_op<float, float> >(Eigen::internal::scalar_sum_op<float, float> const&) const
  [30] Eigen::PlainObjectBase<Eigen::Matrix<float, -1, -1, 0, -1, -1> >::resize(long, long) [60] Eigen::internal::queryCacheSizes(int&, int&, int&) [1] frame_dummy
  [42] Eigen::PlainObjectBase<Eigen::Matrix<float, -1, -1, 0, -1, -1> >::PlainObjectBase<Eigen::Matrix<float, -1, 1, 0, -1, 1> >(Eigen::DenseBase<Eigen::Matrix<float, -1, 1, 0, -1, 1> > const&) [61] void Eigen::internal::matrix_exp_pade3<Eigen::Matrix<float, 25, 25, 0, 25, 25> >(Eigen::Matrix<float, 25, 25, 0, 25, 25> const&, Eigen::Matrix<float, 25, 25, 0, 25, 25>&, Eigen::Matrix<float, 25, 25, 0, 25, 25>&)
  [38] Eigen::CommaInitializer<Eigen::Matrix<float, 13, 1, 0, 13, 1> >::operator,(float const&) [62] void Eigen::internal::matrix_exp_compute<Eigen::Matrix<float, 25, 25, 0, 25, 25>, Eigen::Matrix<float, 25, 25, 0, 25, 25> >(Eigen::Matrix<float, 25, 25, 0, 25, 25> const&, Eigen::Matrix<float, 25, 25, 0, 25, 25>&)
