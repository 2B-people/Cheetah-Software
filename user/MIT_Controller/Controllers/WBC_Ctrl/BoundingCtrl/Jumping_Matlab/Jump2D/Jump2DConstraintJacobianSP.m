function [row_index_CJ,col_index_CJ] = Jump2DConstraintJacobianSP(iter,NUM_X,NUM_C)
%JUMP2DCONSTRAINTJACOBIANSP
%    [ROW_INDEX_CJ,COL_INDEX_CJ] = JUMP2DCONSTRAINTJACOBIANSP(ITER,NUM_X,NUM_C)

%    This function was generated by the Symbolic Math Toolbox version 8.0.
%    27-Aug-2019 12:38:32

t2 = NUM_C.*iter;
t3 = t2+1.0;
t4 = t2+2.0;
t5 = t2+3.0;
t6 = t2+4.0;
t7 = t2+5.0;
row_index_CJ = [t2;t3;t4;t2;t5;t3;t6;t4;t7;t2;t3;t4;t5;t6;t7;t2;t4;t5;t7;t3;t4;t6;t7;t2+6.0;t2+7.0;t2;t4;t5;t7;t3;t4;t6;t7;t2+8.0;t2+9.0];
if nargout > 1
    t8 = NUM_X.*iter;
    t9 = t8+3.0;
    t10 = t8+4.0;
    t11 = t8+5.0;
    t12 = t8+1.6e1;
    t13 = t8+1.7e1;
    t14 = t8+1.8e1;
    t15 = t8+1.9e1;
    col_index_CJ = [t8;t8+1.0;t8+2.0;t9;t9;t10;t10;t11;t11;t8+1.0e1;t8+1.1e1;t8+1.2e1;t8+1.3e1;t8+1.4e1;t8+1.5e1;t12;t12;t12;t12;t13;t13;t13;t13;t13;t13;t14;t14;t14;t14;t15;t15;t15;t15;t15;t15];
end
