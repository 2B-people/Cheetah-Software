//
// Academic License - for use in teaching, academic research, and meeting
// course requirements at degree granting institutions only.  Not for
// government, commercial, or other organizational use.
// File: Jump2DInitialize.cpp
//
// MATLAB Coder version            : 3.2
// C/C++ source code generated on  : 26-Aug-2019 18:20:14
//

// Include Files
#include "rt_nonfinite.h"
#include "Jump2DBounds.h"
#include "Jump2DConstraintJacobian.h"
#include "Jump2DConstraintJacobianFinal.h"
#include "Jump2DConstraintJacobianFinalSP.h"
#include "Jump2DConstraintJacobianInitial.h"
#include "Jump2DConstraintJacobianInitialSP.h"
#include "Jump2DConstraintJacobianSP.h"
#include "Jump2DConstraints.h"
#include "Jump2DConstraintsFinal.h"
#include "Jump2DConstraintsInitial.h"
#include "Jump2DCost.h"
#include "Jump2DCostGradient.h"
#include "Jump2DInitialize.h"
#include "Jump2DLagrangianHessian.h"
#include "Jump2DLagrangianHessianFinal.h"
#include "Jump2DLagrangianHessianFinalSP.h"
#include "Jump2DLagrangianHessianInitial.h"
#include "Jump2DLagrangianHessianInitialSP.h"
#include "Jump2DLagrangianHessianSP.h"

// Function Definitions

//
// JUMP2DINITIALIZE
//     [DECISION_VARS0,INPUTS_REF0] = JUMP2DINITIALIZE(IN1,IN2,IN3,DT,IN5,M,IYY,G)
// Arguments    : const double in1[6]
//                const double in2[4]
//                const double in3[2]
//                double dt
//                const double in5[4]
//                double m
//                double Iyy
//                double g
//                double decision_vars0[10]
//                double inputs_ref0[4]
// Return Type  : void
//
void Jump2DInitialize(const double in1[6], const double in2[4], const double
                      in3[2], double dt, const double in5[4], double m, double
                      Iyy, double g, double decision_vars0[10], double
                      inputs_ref0[4])
{
  double t2;
  double t3;
  double t6;
  double t9;
  double t10;
  double t17;
  int i;

  //     This function was generated by the Symbolic Math Toolbox version 7.1.
  //     26-Aug-2019 18:15:39
  t2 = dt * dt;
  t3 = 1.0 / m;
  t6 = in2[2] * in3[1] + in2[0] * in3[0];
  t9 = in2[3] * in3[1] + in2[1] * in3[0];
  t10 = 1.0 / Iyy;
  t17 = in3[1] * (in2[2] * in5[3] - in2[3] * in5[2]) + in3[0] * (in2[0] * in5[1]
    - in2[1] * in5[0]);
  decision_vars0[0] = (in1[0] + dt * in1[3]) + t2 * t3 * t6 * 0.5;
  decision_vars0[1] = ((in1[1] + dt * in1[4]) + g * t2 * 0.5) + t2 * t3 * t9 *
    0.5;
  decision_vars0[2] = (in1[2] + in1[5] * dt) + t2 * t10 * t17 * 0.5;
  decision_vars0[3] = in1[3] + dt * t3 * t6;
  decision_vars0[4] = (in1[4] + dt * g) + dt * t3 * t9;
  decision_vars0[5] = in1[5] + dt * t10 * t17;
  decision_vars0[6] = 0.0;
  decision_vars0[7] = 0.0;
  decision_vars0[8] = 0.0;
  decision_vars0[9] = 0.0;
  for (i = 0; i < 4; i++) {
    inputs_ref0[i] = 0.0;
  }
}

//
// File trailer for Jump2DInitialize.cpp
//
// [EOF]
//
