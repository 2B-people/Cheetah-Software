//
// Academic License - for use in teaching, academic research, and meeting
// course requirements at degree granting institutions only.  Not for
// government, commercial, or other organizational use.
// File: Jump2DLagrangianHessianInitialSP.cpp
//
// MATLAB Coder version            : 3.2
// C/C++ source code generated on  : 26-Aug-2019 18:20:14
//

// Include Files
#include "rt_nonfinite.h"
#include "Jump2DBounds.h"
#include "Jump2DConstraintJacobian.h"
#include "Jump2DConstraintJacobianFinal.h"
#include "Jump2DConstraintJacobianFinalSP.h"
#include "Jump2DConstraintJacobianInitial.h"
#include "Jump2DConstraintJacobianInitialSP.h"
#include "Jump2DConstraintJacobianSP.h"
#include "Jump2DConstraints.h"
#include "Jump2DConstraintsFinal.h"
#include "Jump2DConstraintsInitial.h"
#include "Jump2DCost.h"
#include "Jump2DCostGradient.h"
#include "Jump2DInitialize.h"
#include "Jump2DLagrangianHessian.h"
#include "Jump2DLagrangianHessianFinal.h"
#include "Jump2DLagrangianHessianFinalSP.h"
#include "Jump2DLagrangianHessianInitial.h"
#include "Jump2DLagrangianHessianInitialSP.h"
#include "Jump2DLagrangianHessianSP.h"

// Function Definitions

//
// JUMP2DLAGRANGIANHESSIANINITIALSP
//     [ROW_INDEX_FINAL_H,COL_INDEX_FINAL_H] = JUMP2DLAGRANGIANHESSIANINITIALSP(ITER,NUM_X)
// Arguments    : double iter
//                double NUM_X
//                double row_index_final_H[10]
//                double col_index_final_H[10]
// Return Type  : void
//
void Jump2DLagrangianHessianInitialSP(double iter, double NUM_X, double
  row_index_final_H[10], double col_index_final_H[10])
{
  double t2;

  //     This function was generated by the Symbolic Math Toolbox version 7.1.
  //     26-Aug-2019 18:15:42
  t2 = NUM_X * iter;
  row_index_final_H[0] = t2;
  row_index_final_H[1] = t2 + 1.0;
  row_index_final_H[2] = t2 + 2.0;
  row_index_final_H[3] = t2 + 3.0;
  row_index_final_H[4] = t2 + 4.0;
  row_index_final_H[5] = t2 + 5.0;
  row_index_final_H[6] = t2 + 6.0;
  row_index_final_H[7] = t2 + 7.0;
  row_index_final_H[8] = t2 + 8.0;
  row_index_final_H[9] = t2 + 9.0;
  memcpy(&col_index_final_H[0], &row_index_final_H[0], 10U * sizeof(double));
}

//
// File trailer for Jump2DLagrangianHessianInitialSP.cpp
//
// [EOF]
//
