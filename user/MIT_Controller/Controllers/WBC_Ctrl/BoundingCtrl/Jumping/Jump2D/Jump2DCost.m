function J = Jump2DCost(in1,in2,in3,in4,in5,in6)
%JUMP2DCOST
%    J = JUMP2DCOST(IN1,IN2,IN3,IN4,IN5,IN6)

%    This function was generated by the Symbolic Math Toolbox version 8.3.
%    27-Aug-2019 12:28:03

Fxb = in2(3,:);
Fxb_d = in4(3,:);
Fxf = in2(1,:);
Fxf_d = in4(1,:);
Fzb = in2(4,:);
Fzb_d = in4(4,:);
Fzf = in2(2,:);
Fzf_d = in4(2,:);
dphi = in1(6,:);
dphi_d = in3(6,:);
dx = in1(4,:);
dx_d = in3(4,:);
dz = in1(5,:);
dz_d = in3(5,:);
phi = in1(3,:);
phi_d = in3(3,:);
q1 = in5(1,:);
q2 = in5(2,:);
q3 = in5(3,:);
q4 = in5(4,:);
q5 = in5(5,:);
q6 = in5(6,:);
r1 = in6(1,:);
r2 = in6(2,:);
r3 = in6(3,:);
r4 = in6(4,:);
x = in1(1,:);
x_d = in3(1,:);
z = in1(2,:);
z_d = in3(2,:);
J = r3.*(Fxb-Fxb_d).^2+r1.*(Fxf-Fxf_d).^2+r4.*(Fzb-Fzb_d).^2+r2.*(Fzf-Fzf_d).^2+q6.*(dphi-dphi_d).^2+q4.*(dx-dx_d).^2+q5.*(dz-dz_d).^2+q3.*(phi-phi_d).^2+q1.*(x-x_d).^2+q2.*(z-z_d).^2;
