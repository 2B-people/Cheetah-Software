function [decision_vars_lb,decision_vars_ub,constraints_ub,constraints_lb] = Jump2DBounds(in1,in2,in3,in4,in5)
%JUMP2DBOUNDS
%    [DECISION_VARS_LB,DECISION_VARS_UB,CONSTRAINTS_UB,CONSTRAINTS_LB] = JUMP2DBOUNDS(IN1,IN2,IN3,IN4,IN5)

%    This function was generated by the Symbolic Math Toolbox version 8.3.
%    27-Aug-2019 12:28:03

Fxb_min = in4(3,:);
Fxb_max = in3(3,:);
Fxf_min = in4(1,:);
Fxf_max = in3(1,:);
Fzb_min = in4(4,:);
Fzb_max = in3(4,:);
Fzf_min = in4(2,:);
Fzf_max = in3(2,:);
dphi_min = in2(6,:);
dphi_max = in1(6,:);
dx_min = in2(4,:);
dx_max = in1(4,:);
dz_min = in2(5,:);
dz_max = in1(5,:);
phi_min = in2(3,:);
phi_max = in1(3,:);
sb = in5(2,:);
sf = in5(1,:);
x_min = in2(1,:);
x_max = in1(1,:);
z_min = in2(2,:);
z_max = in1(2,:);
decision_vars_lb = [x_min;z_min;phi_min;dx_min;dz_min;dphi_min;Fxf_min.*sf;Fzf_min.*sf;Fxb_min.*sb;Fzb_min.*sb];
if nargout > 1
    decision_vars_ub = [x_max;z_max;phi_max;dx_max;dz_max;dphi_max;Fxf_max.*sf;Fzf_max.*sf;Fxb_max.*sb;Fzb_max.*sb];
end
if nargout > 2
    constraints_ub = [0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0;0.0];
end
if nargout > 3
    constraints_lb = [0.0;0.0;0.0;0.0;0.0;0.0;-2.0e+19;-2.0e+19;-2.0e+19;-2.0e+19];
end
